[project]
name = "django-init"
version = "0.1.0"
description = "A personalized cookiecutter-like Django scaffold"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "John Doe", email = "john.doe@example.com" }]
maintainers = [{ name = "John Doe", email = "john.doe@example.com" }]


dependencies = [
  "django-cors-headers>=4.6.0",
  "django-environ>=0.11.2",
  "django-filter>=24.3",
  "django>=5.1.2",
  "djangorestframework>=3.15.2",
]

[dependency-groups]
dev = [
  "factory-boy>=3.3.1",
  "faker>=30.8.2",
  "mypy>=1.13.0",
  "pytest>=8.3.3",
  "pytest-django>=4.9.0",
  "ruff>=0.7.2",
  "django-stubs[compatible-mypy]>=5.1.1",
]


# ======================================================================================
# MYPY 
# ======================================================================================
[tool.mypy]
# strict = true
mypy_path = "."
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "config.django.base"

[[tool.mypy.overrides]]
module = ["config.*", "apps.*.migrations.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
  "django_celery_beat.*",
  "django_filters.*",
  "factory.*",
  "rest_framework.*",
  "rest_framework_jwt.*",
  "google_auth_oauthlib.*",
  "oauthlib.*",
  "qrcode.*",
  "debug_toolbar.*",
]
ignore_missing_imports = true

# ======================================================================================
# PYTEST 
# ======================================================================================
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.django.test"
addopts = ["--import-mode=importlib"]
python_files = ["tests.py", "test_*.py", "*_tests.py"]


# ======================================================================================
# RUFF 
# ======================================================================================
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  "migrations",
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
case-sensitive = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]
